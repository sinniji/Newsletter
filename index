<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>„Éï„Ç°„Ç§„É´„Éì„É•„Éº„Ç¢</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        
        .container {
            background: white;
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
        }
        
        h1 {
            text-align: center;
            color: #333;
            margin-bottom: 30px;
            font-size: 2.5em;
            font-weight: 300;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            color: #555;
            font-weight: 500;
        }
        
        input[type="password"] {
            width: 100%;
            padding: 15px;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            font-size: 16px;
            transition: all 0.3s ease;
            box-sizing: border-box;
        }
        
        input[type="password"]:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 10px rgba(102, 126, 234, 0.3);
        }
        
        button {
            width: 100%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 15px;
            border: none;
            border-radius: 10px;
            font-size: 16px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
        }
        
        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }
        
        button:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }
        
        .loading {
            display: none;
            text-align: center;
            margin: 20px 0;
            color: #667eea;
        }
        
        .error {
            display: none;
            background: #ffebee;
            color: #c62828;
            padding: 15px;
            border-radius: 10px;
            margin: 20px 0;
            border-left: 4px solid #c62828;
        }
        
        .success {
            display: none;
            background: #e8f5e8;
            color: #2e7d32;
            padding: 15px;
            border-radius: 10px;
            margin: 20px 0;
            border-left: 4px solid #2e7d32;
        }
        
        .files-container {
            display: none;
            margin-top: 30px;
        }
        
        .files-title {
            color: #333;
            font-size: 1.5em;
            margin-bottom: 20px;
            font-weight: 500;
        }
        
        .file-list {
            list-style: none;
            padding: 0;
        }
        
        .file-item {
            background: #f8f9fa;
            margin: 10px 0;
            border-radius: 10px;
            overflow: hidden;
            transition: all 0.3s ease;
        }
        
        .file-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        
        .file-link {
            display: block;
            padding: 15px 20px;
            text-decoration: none;
            color: #333;
            transition: all 0.3s ease;
        }
        
        .file-link:hover {
            background: #e9ecef;
            color: #667eea;
        }
        
        .file-name {
            font-weight: 500;
            font-size: 1.1em;
        }
        
        .spinner {
            border: 3px solid #f3f3f3;
            border-top: 3px solid #667eea;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 1s linear infinite;
            margin: 0 auto;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üìÅ „Éï„Ç°„Ç§„É´„Éì„É•„Éº„Ç¢</h1>
        
        <form id="passwordForm">
            <div class="form-group">
                <label for="password">„Éë„Çπ„ÉØ„Éº„Éâ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ</label>
                <input type="password" id="password" name="password" required placeholder="„Éë„Çπ„ÉØ„Éº„Éâ">
            </div>
            <button type="submit" id="submitBtn">
                <span id="buttonText">ÈÄÅ‰ø°</span>
            </button>
        </form>
        
        <div class="loading" id="loading">
            <div class="spinner"></div>
            <p>Ë™çË®º‰∏≠...</p>
        </div>
        
        <div class="error" id="errorMessage"></div>
        <div class="success" id="successMessage"></div>
        
        <div class="files-container" id="filesContainer">
            <h2 class="files-title">üìÑ Âà©Áî®ÂèØËÉΩ„Å™„Éï„Ç°„Ç§„É´</h2>
            <ul class="file-list" id="fileList"></ul>
        </div>
    </div>

    <script>
        // GAS„ÅÆWeb„Ç¢„Éó„É™URL„ÇíË®≠ÂÆöÔºàÂæå„ÅßÂÆüÈöõ„ÅÆURL„Å´Â§âÊõ¥Ôºâ
        const GAS_URL = 'https://script.google.com/macros/s/AKfycbyUIzgOERcjNg38qVMWiRlAShaOwSBuJspsvWU8dW_AJuoelOs_XM12MS_xWItXwxo/exec';
        
        document.getElementById('passwordForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const password = document.getElementById('password').value;
            const submitBtn = document.getElementById('submitBtn');
            const buttonText = document.getElementById('buttonText');
            const loading = document.getElementById('loading');
            const errorMessage = document.getElementById('errorMessage');
            const successMessage = document.getElementById('successMessage');
            const filesContainer = document.getElementById('filesContainer');
            
            // UI„Çí„É™„Çª„ÉÉ„Éà
            hideAllMessages();
            
            // „É≠„Éº„Éá„Ç£„É≥„Ç∞Áä∂ÊÖã„Å´Ë®≠ÂÆö
            submitBtn.disabled = true;
            buttonText.textContent = 'Ë™çË®º‰∏≠...';
            loading.style.display = 'block';
            
            try {
                // GAS„Å´POST„É™„ÇØ„Ç®„Çπ„Éà„ÇíÈÄÅ‰ø°
                const response = await fetch(GAS_URL, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        password: password
                    })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    // ÊàêÂäüÊôÇ
                    successMessage.textContent = '„Éë„Çπ„ÉØ„Éº„ÉâË™çË®º„Å´ÊàêÂäü„Åó„Åæ„Åó„ÅüÔºÅ';
                    successMessage.style.display = 'block';
                    
                    // „Éï„Ç°„Ç§„É´‰∏ÄË¶ß„ÇíË°®Á§∫
                    displayFiles(data.files);
                    
                } else {
                    // Â§±ÊïóÊôÇ
                    errorMessage.textContent = data.message || '„Éë„Çπ„ÉØ„Éº„Éâ„ÅåÊ≠£„Åó„Åè„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ';
                    errorMessage.style.display = 'block';
                }
                
            } catch (error) {
                console.error('Error:', error);
                errorMessage.textContent = '„Çµ„Éº„Éê„Éº„Å®„ÅÆÈÄö‰ø°„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ„Åó„Å∞„Çâ„ÅèÂæå„Åß„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ';
                errorMessage.style.display = 'block';
            } finally {
                // „É≠„Éº„Éá„Ç£„É≥„Ç∞Áä∂ÊÖã„ÇíËß£Èô§
                submitBtn.disabled = false;
                buttonText.textContent = 'ÈÄÅ‰ø°';
                loading.style.display = 'none';
            }
        });
        
        function hideAllMessages() {
            document.getElementById('errorMessage').style.display = 'none';
            document.getElementById('successMessage').style.display = 'none';
            document.getElementById('filesContainer').style.display = 'none';
        }
        
        function displayFiles(files) {
            const fileList = document.getElementById('fileList');
            const filesContainer = document.getElementById('filesContainer');
            
            // „Éï„Ç°„Ç§„É´„É™„Çπ„Éà„Çí„ÇØ„É™„Ç¢
            fileList.innerHTML = '';
            
            if (files && files.length > 0) {
                files.forEach(file => {
                    const listItem = document.createElement('li');
                    listItem.className = 'file-item';
                    
                    const link = document.createElement('a');
                    link.href = file.url;
                    link.className = 'file-link';
                    link.target = '_blank';
                    link.rel = 'noopener noreferrer';
                    
                    const fileName = document.createElement('div');
                    fileName.className = 'file-name';
                    fileName.textContent = file.name;
                    
                    link.appendChild(fileName);
                    listItem.appendChild(link);
                    fileList.appendChild(listItem);
                });
                
                filesContainer.style.display = 'block';
            } else {
                const listItem = document.createElement('li');
                listItem.className = 'file-item';
                listItem.innerHTML = '<div class="file-link">Âà©Áî®ÂèØËÉΩ„Å™„Éï„Ç°„Ç§„É´„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ</div>';
                fileList.appendChild(listItem);
                filesContainer.style.display = 'block';
            }
        }
    </script>
</body>
</html>
